#!/bin/ash

git_repo_url="https://raw.githubusercontent.com/pry0cc/pentest-appliance/master"

# Reset
Color_Off='\033[0m'       # Text Reset

# Regular Colors
export Black='\033[0;30m'        # Black
export Red='\033[0;31m'          # Red
export Green='\033[0;32m'        # Green
export Yellow='\033[0;33m'       # Yellow
export Blue='\033[0;34m'         # Blue
export Purple='\033[0;35m'       # Purple
export Cyan='\033[0;36m'         # Cyan
export White='\033[0;37m'        # White

# Bold
export BBlack='\033[1;30m'       # Black
export BRed='\033[1;31m'         # Red
export BGreen='\033[1;32m'       # Green
export BYellow='\033[1;33m'      # Yellow
export BBlue='\033[1;34m'        # Blue
export BPurple='\033[1;35m'      # Purple
export BCyan='\033[1;36m'        # Cyan
export BWhite='\033[1;37m'       # White

echo -e "${BGreen}Starting installer...${green}"

echo http://dl-cdn.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories
apk update
apk add jq openvpn curl figlet bash bind-tools util-linux nmap vim
mkdir -p /etc/appliance/

wget -O /etc/appliance/splash.sh $git_repo_url/resources/splash.sh
wget -O /usr/bin/diceware $git_repo_url/resources/diceware
wget -O /root/.profile $git_repo_url/resources/profile
wget -O /etc/ssh/sshd_config $git_repo_url/resources/sshd_config
wget -O /etc/motd $git_repo_url/resources/motd
chmod +x /etc/appliance/splash.sh
chmod +x /usr/bin/diceware
sed -i 's/root:\/bin\/ash/root:\/bin\/bash/g' /etc/passwd
sed -i 's/getty 38400 tty1/agetty --autologin root --noclear 38400 tty1/g' /etc/inittab 

echo -e "${Color_Off}"

echo -e -n "${BWhite} Please enter your GitHub username to import SSH public key >> ${Color_Off}"
read username

mkdir -p /root/.ssh/
curl -s "https://github.com/$username.keys" >> /root/.ssh/authorized_keys

echo -e -n "${BWhite} Please enter your company name >> ${Color_Off}"
read company

echo -e -n "${BWhite} Please enter your server instance URL >> ${Color_Off}"
read server

read -p "${BWhite}Would you like to install OpenVAS? [y/N]: " response
case $response in
	[Yy]* )
		apk add openvas openvas-config gvmd gvm-libs greenbone-security-assistant ospd-openvas

		# Configure Postgresql
		rc-service postgresql setup
		rc-service postgresql start
		rc-update add postgresql

		su postgres -c 'createuser -DRS gvm; createdb -O gvm gvmd;'
		psql gvmd -c 'create role dba with superuser noinherit;grant dba to gvm;create extension if not exists "uuid-ossp";create extension "pgcrypto";'
	
		# Configure GVM
		su gvm -c 'gvm-manage-certs -a'
		su gvm -c 'gvmd --create-user=admin --password=admin' # temp 

		# Update OpenVAS
		greenbone-scapdata-sync
		greenbone-certdata-sync
		rc-update add gvmd

		su gvm -c 'greenbone-nvt-sync'
	
		# Listen on all interfaces
		sed -e 's/GSA_LISTEN=\"--listen=127.0.0.1\"/GSAD_LISTEN=\"0.0.0.0\"/g' /etc/conf.d/gsad

		rc-update add gsad

		rc-service gvmd start
		rc-service gsad start

		echo -e "{\"server\":\"$server\", \"company\":\"$company\", \"openvas\":\"true\"}" | jq -r > /etc/appliance/appliance-settings.json
		break;;
	[Nn]* )
		echo -e "{\"server\":\"$server\", \"company\":\"$company\"}" | jq -r > /etc/appliance/appliance-settings.json
		exit;;
esac

echo -e "${BWhite}Installed successfully! Please power off and export!${Color_Off}"
echo -e "${BWhite}After this powers off, take a snapshot and/or export the appliance for distribution, this is the fresh state${Color_Off}"
echo ""
echo -e -n "${BGreen}           PRESS ENTER TO POWER OFF           ${Color_Off}"
read
poweroff
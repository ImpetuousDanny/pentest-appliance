#!/bin/bash

# Reset
export Color_Off='\033[0m'       # Text Reset

# Regular Colors
export Black='\033[0;30m'        # Black
export Red='\033[0;31m'          # Red
export Green='\033[0;32m'        # Green
export Yellow='\033[0;33m'       # Yellow
export Blue='\033[0;34m'         # Blue
export Purple='\033[0;35m'       # Purple
export Cyan='\033[0;36m'         # Cyan
export White='\033[0;37m'        # White

# Bold
export BBlack='\033[1;30m'       # Black
export BRed='\033[1;31m'         # Red
export BGreen='\033[1;32m'       # Green
export BYellow='\033[1;33m'      # Yellow
export BBlue='\033[1;34m'        # Blue
export BPurple='\033[1;35m'      # Purple
export BCyan='\033[1;36m'        # Cyan
export BWhite='\033[1;37m'       # White

company="D2NA"
server_url="uk.navisec.xyz"
port=""

while true
do
    clear
    echo -e "${BRed}"
    echo $company | figlet
    echo -e "${Color_Off}"
    echo ""
    key_filename="/etc/appliance/appliance.key"

    if [ ! -f "$key_filename" ]
    then
        echo "No key detected, generating one..."
        /usr/bin/diceware >> "$key_filename"
    fi

    key="$(cat "$key_filename")"
    echo -e "${BWhite}Your personalization key is ${BGreen}'$key'${Color_Off}"
    data=$(timeout 3 curl -s -k "https://$server_url:$port/init/$key")
    auth=$(echo $data | jq .auth)

    if [ "$auth" == "true" ]
    then
        if [ ! -f "/etc/openvpn/openvpn.conf" ]
        then
            echo $data | jq -r .config >> /etc/openvpn/openvpn.conf
            reboot
        else
            echo -e "${BWhite}Authentication: [${BGreen} OK ${Color_Off}]"
        fi
    else
        echo -e "${BWhite}Authentication: [${BRed} FAIL ${Color_Off}]"
        killall openvpn 2>/dev/null
        if [ -f "/etc/openvpn/openvpn.conf" ]
        then
            rm /etc/openvpn/openvpn.conf
        fi
    fi
    external_ip=$(timeout 10 curl -s https://icanhazip.com)
    remote_host=$(echo $server_url | cut -d "/" -f 3)
    remote_ip=$(dig +short $remote_host)
    echo -e "${BWhite}Public IP: ${BGreen}'$external_ip'${Color_Off}" 

    test=$(ifconfig tun0 2>&1)
    if [[ ! "${test}" =~ "Device not found" ]]
    then
        echo -e "${BWhite}VPN Connection Status: [${BGreen} OK ${Color_Off}]" 
    else
        echo -e "${BWhite}VPN Connection Status: [${BRed} FAIL ${Color_Off}]" 
        rc-service openvpn restart 2>/dev/null
    fi

    openvas=$(jq -r '.openvas' /etc/appliance/appliance-settings.json)
    if [ "${openvas}" = "true" ]
    then
	    ospd=$(rc-service ospd-openvas statusrc-service  | cut -d " " -f 4)
	    gsad=$(rc-service gsad status | cut -d " " -f 4)
	    gvmd=$(rc-service gvmd status | cut -d " " -f 4)

	    if [ "${ospd}" = "started" ]
	    then
		echo -e "${BWhite}OpenVAS Scanner: [${BGreen} OK ${Color_Off}]"
	    else
		echo -e "${BWhite}OpenVAS Scanner: [${BRed} FAIL ${Color_Off}]"
		rc-service ospd-openvas stop 2>&1
		rc-service gvmd stop 2>&1
		mkdir -p /var/run/gvmd
	    	chown -R gvm:gvm /var/run/gvmd
		ospd-openvas --lock-file-dir=/var/run/gvmd/ospd.sock
		rc-service gvmd start 2>&1
		rc-service gsad restart 2>&1
	    fi

	    [ "${gsad}" = "started" ] && echo -e "${BWhite}GSAD Web Status: [${BGreen} OK ${Color_Off}]" || echo -e "${BWhite}OpenVAS Scanner: [${BRed} FAIL ${Color_Off}]"
            [ "${gvmd}" = "started" ] && echo -e "${BWhite}GVMD SVC Status: [${BGreen} OK ${Color_Off}]"voi || echo -e "${BWhite}OpenVAS Scanner: [${BRed} FAIL ${Color_Off}]"
    fi
    sleep 10
done